# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  
  # Base box to use
  config.vm.box = "ubuntu/xenial64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
  
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
    
    # Set video memory to a userful value
    vb.customize [ "modifyvm", :id, "--vram", "128" ]
    
    # Disable uart so this works on WSL
    # https://stackoverflow.com/questions/45773825/vagrant-with-virtualbox-on-wsl-verr-path-not-found
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
  end

  #config.vm.provision "file", source: ".vagrant.machines/default/virtualbox/private_key", destination: "/home/vagrant/.ssh/id_rsa"

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    sudo /vagrant/bootstrap.sh 
    cat /dev/zero | ssh-keygen -q -N ""
    cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys 
    cd /vagrant/src

    export ANSIBLE_HOST_KEY_CHECKING=False
    ansible-playbook -i inventories/localhost arcade.yml
#    ansible-playbook -i inventories/localhost -e 'host_key_checking=False' arcade.yml
  SHELL
end
